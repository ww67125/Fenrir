InnoDB
表根据主键顺序以索引形式存放（索引组织表）
使用B+树索引模型。

主键索引(InnoDB中又称聚簇索引)
叶子节点存储整行数据

非主键索引（InnoDB中又称二级索引）
叶子节点存储主键的值

主键查询只搜索主键B+树
非主键查询需要先走非主键索引，然后再走主键索引，称为回表

覆盖索引
索引中覆盖了查询需求，不需要回表。

联合索引
多个字段组成的索引，索引项按照索引定义里的字段排序
联合索引建立原则
通过调整顺序，可以少维护一个索引，联合查询和单独查询都可以用到
相对来说，字段大的建在联合索引前面，减少再次创建的空间占用。
联合索引在b+树中结构
同一条记录多个字段作为key，对应value是id

索引最左前缀原则
只要满足最左n个字段，或者最左n个字符，就可以使用上索引。

索引下推（5.6+）
索引遍历中，对索引包含的字段做判断，过滤不满足条件记录，减少回表次数
比如同时有姓名年龄字段，姓名满足筛选出来，直接在索引中筛选年龄条件。
